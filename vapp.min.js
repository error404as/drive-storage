var Vapp={gapi:!1,stateKey:"vapp_state",dataKey:"vapp_data",options:{},data:{},init:function(){Vapp.getStogareData(),Vapp.ui.formInit(),Vapp.options.useDrive?Vapp.auth.loadGapi("vapp_clientLoad"):Vapp.getData()},resetDrive:function(){delete this.options.dr_id,delete this.options.dr_title},getData:function(){if(Vapp.options.useDrive)Vapp.drive.getDataFromDrive();else{var a=localStorage.getItem(Vapp.dataKey);if(a)try{Vapp.data=JSON.parse(a),Vapp.handleData()}catch(b){Vapp.handleData()}else Vapp.handleData()}},saveData:function(){var a=Vapp.ui,b=Vapp.drive;if(a.hidePopup(),Vapp.options.useDrive){if(a.lockScreen(!0,"Saving app data"),b.getFileMetadata(),!b.metadata)return a.chooseResourceFile(),a.lockScreen(!1),!1;b.checkFileExists(b.metadata.title,b.saveDataHandle)}else Vapp.callback.dataSaved();localStorage.setItem(Vapp.dataKey,JSON.stringify(Vapp.data))},handleData:function(){var a=JSON.stringify(Vapp.data);$("#data").html(Vapp.data&&"{}"!==a&&"[]"!==a?a:"No data yet...")},getStogareData:function(){var a=localStorage.getItem(Vapp.stateKey);Vapp.options=a?JSON.parse(a):{},Vapp.ui.updateFileName()},setStogareData:function(){localStorage.setItem(Vapp.stateKey,JSON.stringify(Vapp.options)),Vapp.ui.updateFileName()}};Vapp.auth={loadGapi:function(a){a=a||"vapp_clientLoad",Vapp.gapi=!0,Vapp.ui.lockScreen(!0,"Loading Google API");var b=document.createElement("script");b.src="https://apis.google.com/js/client.js?onload="+a,document.getElementsByTagName("head")[0].appendChild(b)},handleClientLoad:function(){window.setTimeout(Vapp.auth.checkAuth,1)},checkAuth:function(){Vapp.ui.lockScreen(!0,"Authorization with Google"),gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:!0},Vapp.auth.handleAuthResult)},checkAuth2:function(){gapi.auth.getToken()||gapi.auth.authorize({client_id:CLIENT_ID,scope:SCOPES,immediate:!1},Vapp.auth.handleAuthResult)},handleAuthResult:function(a){var b=Vapp.ui,c=Vapp.options;b.lockScreen(!1),a&&!a.error&&(Vapp.callback.authOK(),b.lockScreen(!0,"Loading Google Drive API"),gapi.client.load("drive","v2",function(){gapi.load("picker"),b.lockScreen(!1),c.useDrive&&(b.updateFileName(),c.dr_id?Vapp.getData():b.chooseResourceFile())}))}};var vapp_clientLoad=function(){Vapp.auth.handleClientLoad()};Vapp.ui={lockScreen:function(a,b){a?($("body").addClass("locked"),b&&$("body").attr("lockmsg",b)):$("body").removeClass("locked").removeAttr("lockmsg")},hidePopup:function(){$("#popup-overlay,.popup").hide()},showPopup:function(a){var b=a?$("#"+a):null;b&&b.length&&($("#popup-overlay").show(),$(".popup").hide(),$("#"+a).show(),Vapp.callback.requireFileName(),Vapp.auth.checkAuth2())},updateFileNotCreated:function(a){a?$(".file-is-not-created").show():$(".file-is-not-created").hide()},updateFileName:function(){Vapp.options.dr_title?($(".current-file-name").text(Vapp.options.dr_title).show(),$("#wrapDrive").show()):($(".current-file-name").hide(),$("#wrapDrive").hide())},chooseResourceFile:function(){Vapp.ui.showPopup("pop-new")},formInit:function(){$("#setUseDrive")[0]&&($("#setUseDrive")[0].checked=Vapp.options.useDrive?!0:!1,$("#settings").on("change",Vapp.ui.formHandle))},formHandle:function(){Vapp.options.useDrive=$("#setUseDrive")[0].checked,this.triggerHandler()},triggerHandler:function(){var a=Vapp.ui,b=Vapp.options;b.useDrive?("undefined"!=typeof gapi||Vapp.gapi?gapi.client.drive||Vapp.auth.checkAuth():Vapp.auth.loadGapi("vapp_clientLoad"),a.chooseResourceFile()):(Vapp.resetDrive(),a.updateFileNotCreated(0)),a.updateFileName(),Vapp.setStogareData()}},Vapp.drive={metadata:{},getFileMetadata:function(){Vapp.options.dr_title?this.metadata={title:Vapp.options.dr_title,mimeType:"application/json"}:this.metadata=null},saveDataHandle:function(a){a&&a.id?Vapp.drive.saveToFile(a.id):Vapp.drive.saveToFile()},saveToFile:function(a){var b=Vapp.ui;_meta=Vapp.drive.metadata,_o=Vapp.options,b.updateFileNotCreated(0);const c="-------314159265358979323846264",d="\r\n--"+c+"\r\n",e="\r\n--"+c+"--";var f=unescape(encodeURIComponent(JSON.stringify(Vapp.data))),g=btoa(f),h=d+"Content-Type: application/json\r\n\r\n"+JSON.stringify(_meta)+d+"Content-Type: application/json\r\nContent-Transfer-Encoding: base64\r\n\r\n"+g+e;if(a)var i=gapi.client.request({path:"/upload/drive/v2/files/"+a,method:"PUT",params:{uploadType:"multipart",alt:"json"},headers:{"Content-Type":'multipart/mixed; boundary="'+c+'"'},body:h});else var i=gapi.client.request({path:"/upload/drive/v2/files",method:"POST",params:{uploadType:"multipart"},headers:{"Content-Type":'multipart/mixed; boundary="'+c+'"'},body:h});i.execute(function(a){b.lockScreen(!1),_o.dr_id=a.id,_o.dr_title=a.title,Vapp.setStogareData(),Vapp.callback.dataSaved()})},createPicker:function(){if(!gapi.auth.getToken())return void Vapp.auth.checkAuth2();if("undefined"==typeof google)return void Vapp.auth.checkAuth();var a=gapi.auth.getToken().access_token;if(Vapp.options.noUpload)var b=(new google.picker.PickerBuilder).addView(new google.picker.DocsView).enableFeature(google.picker.Feature.MINE_ONLY).setOAuthToken(a).setDeveloperKey(DEV_KEY).setCallback(Vapp.drive.pickerCallback).build();else var b=(new google.picker.PickerBuilder).addView(new google.picker.DocsView).addView(new google.picker.DocsUploadView).enableFeature(google.picker.Feature.MINE_ONLY).setOAuthToken(a).setDeveloperKey(DEV_KEY).setCallback(Vapp.drive.pickerCallback).build();b.setVisible(!0)},pickerCallback:function(a){var b=Vapp.ui,c=Vapp.options;a.action==google.picker.Action.PICKED&&(b.showPopup("pop-picked"),b.updateFileNotCreated(0),c.dr_id=a.docs[0].id,c.dr_title=a.docs[0].name,Vapp.setStogareData(),Vapp.callback.filePicked())},checkFileExists:function(a,b){var c=gapi.client.drive.files.list({q:"title='"+a+"'"});c.execute(function(a){if(console.log(a),"function"==typeof b){{a.items?a.items.length:0}a.items&&a.items.length&&a.items[0].id?b(a.items[0]):b()}})},downloadFile:function(a){var b=Vapp.ui;if(a.downloadUrl){var c=gapi.auth.getToken().access_token,d=new XMLHttpRequest;d.open("GET",a.downloadUrl),d.setRequestHeader("Authorization","Bearer "+c),d.onload=function(){b.lockScreen(!1);var a=d.responseText;try{Vapp.data=JSON.parse(a),Vapp.handleData(),localStorage.setItem(Vapp.dataKey,JSON.stringify(Vapp.data))}catch(c){}},d.onerror=function(){b.lockScreen(!1)},d.send()}else b.lockScreen(!1),Vapp.resetDrive(),Vapp.setStogareData(),Vapp.drive.abortDrive()},getDataFromDrive:function(){var a=Vapp.ui;a.hidePopup();var b=Vapp.options.dr_id;if(!b)return Vapp.drive.createPicker(),!1;a.lockScreen(!0,"Loading data from Drive");var c=gapi.client.drive.files.get({fileId:b});c.execute(function(a){Vapp.drive.downloadFile(a)})},addNewFile:function(){var a=$.trim($("#fname").val());a&&Vapp.drive.checkFileExists(a,Vapp.drive.addNewFileHandle)},addNewExistsBack:function(){Vapp.ui.showPopup("pop-new"),Vapp.resetDrive(),Vapp.setStogareData()},abortDrive:function(){Vapp.options.dr_title||(Vapp.options.useDrive=!1,document.settings&&document.settings.setUseDrive?(document.settings.setUseDrive.checked=!1,Vapp.ui.formHandle()):Vapp.ui.triggerHandler(),Vapp.getData()),Vapp.ui.hidePopup()},addNewFileHandle:function(a){var b=Vapp.ui,c=Vapp.options;a&&a.id&&a.title?(c.dr_id=a.id,c.dr_title=a.title,Vapp.setStogareData(),b.showPopup("pop-exists")):(b.hidePopup(),c.dr_title=$.trim($("#fname").val()),b.updateFileName(),b.updateFileNotCreated(1),Vapp.callback.newFileNameReady()),$("#fname").val("")}},Vapp.callback={requireFileName:function(){console.log("Callback: requireFileName")},authOK:function(){console.log("Callback: authOK")},dataSaved:function(){console.log("Callback: dataSaved")},newFileNameReady:function(){console.log("Callback: newFileNameReady")},filePicked:function(){console.log("Callback: filePicked")}};